import type {Metadata} from "next";
import "./globals.css";
import React from 'react';
import {ThemeProvider} from "@/components/theme-provider";
import Header from "@/components/header/header";
import {Toaster} from "@/components/ui/toaster";
import {Montserrat} from 'next/font/google';
import StoreProvider from "@/store/StoreProvider";
import {GoogleOAuthProvider} from '@react-oauth/google';
import dynamic from "next/dynamic";


const montserrat = Montserrat({
  weight: ['100', '300', '400', '700', '900'],
  subsets: ['latin'],
  variable: '--font-montserrat',
});

export const metadata: Metadata = {
  title: "AiHelperHub",
  description: "Generated by create next app",
};

const GoogleAnalytics = dynamic(() => import('@/components/GoogleAnalytics'), {ssr: false});
// const GoogleReCaptchaProvider = dynamic(
//   () => import("react-google-recaptcha-v3").then(mod => mod.GoogleReCaptchaProvider),
//   {ssr: false}
// );

// Google Recaptcha V3 key
// const GoogleRecaptchaV3Key = process.env.NEXT_PUBLIC_RECAPTCHA_V3_KEY

const GoogleClientID = process.env.NEXT_GOOGLE_OAUTH;


export default function RootLayout({children}: Readonly<{ children: React.ReactNode; }>) {
  return (

    <html lang="en">
    <body
      className={`${montserrat.variable}`}
      suppressHydrationWarning
    >
    <GoogleOAuthProvider clientId={`${GoogleClientID}`}>
      <ThemeProvider
        attribute="class"
        defaultTheme="system"
        enableSystem
        disableTransitionOnChange
      >
        <StoreProvider>
          <Header/>
          {children}
          <Toaster/>
        </StoreProvider>
      </ThemeProvider>
    </GoogleOAuthProvider>
    <GoogleAnalytics/>
    {/*<Script*/}
    {/*  strategy={"beforeInteractive"}*/}
    {/*  src={`https://www.google.com/recaptcha/api.js?render=${GoogleRecaptchaV3Key}`}*/}
    {/*/>*/}
    </body>
    </html>
  );
}
